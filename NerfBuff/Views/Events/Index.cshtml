@model IEnumerable<NerfBuff.Models.Events>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Time)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Long)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Lat)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Author)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Time)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Long)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lat)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
<section id="Map" style="padding: 2px; width: 600px; height: 450px; margin-left:100px;">
    <script type='text/javascript'
            src='https://www.bing.com/api/maps/mapcontrol?callback=GetMap'
            async defer>
    </script>
    <script type='text/javascript'>

        var map;

        function GetMap() {
            map = new Microsoft.Maps.Map('#Map', {
                credentials: 'ApE76x2wWpJAOCGUZE4TJl46UDPFVlyjyC4lBQhndPs8KozGWyVH4_Ol-zV-3eOA',
                center: new Microsoft.Maps.Location(31.0461, 34.8516)
            });

            var pushpin = new Microsoft.Maps.Pushpin(map.getCenter(), null);
            map.entities.push(pushpin);


            $.ajax({
                url: '/Events/EventsLocations',
                success: function (result) {
                    var usersData = result;

                    addLocationsToMap(usersData);
                },
                error: function (hxr, status, err) {
                    console.log('status: ' + status + ', error: ' + err);
                }
            });


            function addLocationsToMap(EventsLocations) {

                //var map = new Microsoft.Maps.Map('#myMap', {
                //    credentials: 'AsYxj9oP7Drg1hmS86jOLLLtiemAKHzT-qQk5HE30VqKNjzYtwA_0EtKqSDKj-WC',
                //    center: new Microsoft.Maps.Location(48.13641, 11.57754)
                //});

                EventsLocations.forEach(function (eventLocation) {

                    //Create custom Pushpin
                    var pin = new Microsoft.Maps.Pushpin(new Microsoft.Maps.Location(eventLocation.lat, eventLocation.long), {
                        title: eventLocation.eventName
                    });

                    //Add the pushpin to the map
                    map.entities.push(pin);
                })
            }
        }

    </script>

</section>